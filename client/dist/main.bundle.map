{"version":3,"sources":["webpack:///./src/app/components/company.component.ts","webpack:///./src/app/components/quote-detail.component.ts","webpack:///./src/app/components/quote.component.ts","webpack:///./src/app/services/quotes.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/services/company.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/components/company.component.css","webpack:///./src/app/components/quote-detail.component.css","webpack:///./src/app/components/quote.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/company.component.html","webpack:///./src/app/components/quote-detail.component.html","webpack:///./src/app/components/quote.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component } from '@angular/core';\nimport { CompanyService } from '../services/company.service';\nimport { Company } from '../models/company.model';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { MdCard, MdToolbar, MdIconModule, MdButtonModule, MdListModule, MdInputModule, MdCheckboxModule } from '@angular/material';\n\n\n@Component({\n    selector: 'company',\n    templateUrl: './company.component.html',\n    styleUrls: ['./company.component.css'],\n    providers: [CompanyService]\n})\n\nexport class CompanyComponent {\n\n  onSubmit({ value, valid } : { value: Company, valid: boolean }){\n    console.log(value, valid);\n  }\n\n  title: string = \"Company List\";\n    \n    companies: Company[];\n    id: string;\n    cName: string;\n    cStreet: string;\n    cCity: string;\n    cState: string;\n    cZip: string;\n    cPhone: string;\n    cEmail: string;\n\n    states = [\n    {value: 'CA', viewValue: 'CA'},\n    {value: 'CO', viewValue: 'CO'},\n    {value: 'TX', viewValue: 'TX'}\n  ];\n\n  hasStateError = false;\n\n  validateState(value){\n    if (this.cState === \"default\")\n      this.hasStateError = true;\n    else\n      this.hasStateError = false;\n  }\n\n    constructor(private companyService: CompanyService){\n    this.companyService.getCompanies()\n      .subscribe(companies => {\n        this.companies = companies;\n      });\n  }\n\n\n  addCompany(event){\n  event.preventDefault();\n    var newCompany = {\n      CompanyName: this.cName,\n      CompanyStreet: this.cStreet,\n      CompanyCity: this.cCity,\n      CompanyState: this.cState,\n      CompanyZip: this.cZip,\n      CompanyPhone: this.cPhone,\n      CompanyEmail: this.cEmail\n    }\n    this.companyService.addCompany(newCompany)\n    .subscribe(company => {\n      this.companies.push(company);\n      this.cName = '';\n      this.cStreet = '';\n      this.cCity = '';\n      this.cState = '';\n      this.cZip = '';\n      this.cPhone = '';\n      this.cEmail = '';\n    })\n  }\n\n  deleteCompany(id){\n    var companies = this.companies;\n\n    var isConfirm = confirm('Are you sure you want to delete');\n\n    if (!isConfirm){\n      return false;\n    }\n    else {\n      this.companyService.deleteCompany(id).subscribe(data => {\n      if(data.n == 1){\n        for(var i = 0; i < companies.length; i++){\n          if(companies[i]._id == id){\n            companies.splice(i, 1);\n          }\n        }\n      }\n    });\n    }\n  }\n\n\nupdateCompany(company){\n    var _company = {\n      _id: company._id,\n      CompanyName: company.CompanyName,\n      CompanyEmail: 'company@CompanyEmail.com'\n    };\n\n    this.companyService.updateCompany(_company).subscribe(data => {\n      company.CompanyEmail = 'company@CompanyEmail.com';\n   })\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/company.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Company } from '../models/company.model';\nimport { Quote } from '../models/quote.model';\nimport { QuotesService } from '../services/quotes.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n// import { MdCard, MdToolbar, MdIconModule, MdButtonModule, MdListModule, MdInputModule, MdCheckboxModule } from '@angular/material';\n\n\n@Component({\n    selector: 'quote-detail',\n    templateUrl: './quote-detail.component.html',\n    styleUrls: ['./quote-detail.component.css'],\n    providers: [QuotesService]\n})\n\nexport class QuoteDetailComponent {\n\n    quotes: Quote[];\n\n    quoteName: string;\n    companyName: string;\n    amountQuoted: string;\n    jobType: string;\n    jobDate: string;\n    jobDetails: string;\n    deliveryAddress: string;\n\n    jobTypes = [\n        {value: 'T1', viewValue: 'Type One'},\n        {value: 'T2', viewValue: 'Type Two'},\n        {value: 'T3', viewValue: 'Type Three'} \n    ];\n\n    companies = [\n        {value: 'CO1', viewValue: 'Company One'},\n        {value: 'CO2', viewValue: 'Company Two'},\n        {value: 'CO3', viewValue: 'Company Three'}\n    ];\n\n    constructor(private quotesService: QuotesService){\n    this.quotesService.getQuotes()\n      .subscribe(quotes => {\n        this.quotes = quotes;\n      });\n  }\n\n  ngOnInit() {\n  }\n\n  addQuote(event){\n  event.preventDefault();\n    var newQuote = { \n        QuoteName: this.quoteName,\n        CompanyName: this.companyName,\n        AmountQuoted: this.amountQuoted,\n        JobType: this.jobType,\n        JobDate: this.jobDate,\n        JobDetails: this.jobDetails,\n        DeliveryAddress: this.deliveryAddress\n      \n    }\n    this.quotesService.addQuote(newQuote)\n    .subscribe(quote => {\n      this.quotes.push(quote);\n      this.quoteName = '';\n      this.companyName = '';\n      this.amountQuoted = '';\n      this.jobType = '';\n      this.jobDate = '';\n      this.jobDetails = '';\n      this.deliveryAddress = '';\n    })\n  }\n\n  \n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/quote-detail.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Company } from '../models/company.model';\r\nimport { Quote } from '../models/quote.model';\r\nimport { QuotesService } from '../services/quotes.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\n// import { MdCard, MdToolbar, MdIconModule, MdButtonModule, MdListModule, MdInputModule, MdCheckboxModule } from '@angular/material';\r\n\r\n\r\n@Component({\r\n    selector: 'quote',\r\n    templateUrl: './quote.component.html',\r\n    styleUrls: ['./quote.component.css'],\r\n    providers: [QuotesService]\r\n})\r\n\r\nexport class QuoteComponent {\r\n\r\n    title: string = \"Work List\";\r\n    quotes: Quote[];\r\n\r\n    quoteName: string;\r\n    CompanyName: string;\r\n    AmountQuoted: string;\r\n    JobType: string;\r\n    JobDate: string;\r\n    JobDetails: string;\r\n    DeliveryAddress: string;\r\n\r\n    constructor(private quotesService: QuotesService){\r\n    this.quotesService.getQuotes()\r\n      .subscribe(quotes => {\r\n        this.quotes = quotes;\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n      \r\n  }\r\n\r\n  deleteQuote(id){\r\n    var quotes = this.quotes;\r\n\r\n    var isConfirm = confirm('Are you sure you want to delete');\r\n\r\n    if (!isConfirm){\r\n      return false;\r\n    }\r\n    else {\r\n      this.quotesService.deleteQuote(id).subscribe(data => {\r\n      if(data.n == 1){\r\n        for(var i = 0; i < quotes.length; i++){\r\n          if(quotes[i]._id == id){\r\n            quotes.splice(i, 1);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/quote.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class QuotesService {\r\n\r\nbasePath: string = \"http://localhost:3000/api/\";\r\n\r\n    constructor(private http: Http){\r\n        console.log('Quotes Service Initialized...');\r\n    }\r\n\r\n    getQuotes(){\r\n    return this.http.get(this.basePath + \"quotes\")\r\n        .map(res => res.json());\r\n}\r\n\r\n    addQuote(newQuote){   \r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.basePath + 'quotes', JSON.stringify(newQuote), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getQuote(id){\r\n        return this.http.get(this.basePath + \"quotes/\"+id)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    deleteQuote(id){\r\n        return this.http.delete(this.basePath + \"quotes/\"+id)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    updateQuote(quote){\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(this.basePath + 'quotes/'+quote._id, JSON.stringify(quote), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/quotes.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 540;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 540\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { CompanyService } from './services/company.service';\nimport { MdCard, MdIconModule, MdButtonModule, MdListModule, MdInputModule, MdCheckboxModule } from '@angular/material';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  \n})\nexport class AppComponent {\n  title = 'New Blank App Starter Template with Material';\n\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { ROUTES } from './app.routes';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomFormsModule } from 'ng2-validation'\nimport { HttpModule } from '@angular/http';\nimport { RouterModule, NoPreloading } from '@angular/router';\nimport { MaterialModule } from '@angular/material';\nimport { Md2Module } from 'md2/module';\nimport { MdButtonModule } from '@angular/material';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { QuillModule } from 'ngx-quill/src/quill.module';\n\n\nimport 'hammerjs';\n// import {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppComponent } from './app.component';\nimport { QuoteComponent } from './components/quote.component';\nimport { CompanyComponent } from './components/company.component';\nimport { QuoteDetailComponent } from './components/quote-detail.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    QuoteComponent,\n    CompanyComponent,\n    QuoteDetailComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    CustomFormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    MaterialModule.forRoot(),\n    RouterModule.forRoot(ROUTES, {useHash: true, preloadingStrategy: NoPreloading}),\n    Md2Module.forRoot(),\n    FileUploadModule,\n    FlexLayoutModule,\n    QuillModule,\n    // NgbModule.forRoot(),\n    MdButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Routes } from '@angular/router';\n\nimport { QuoteComponent } from './components/quote.component';\nimport { CompanyComponent } from './components/company.component';\nimport { QuoteDetailComponent } from './components/quote-detail.component';\n\nexport const ROUTES: Routes = [\n\n    {\n        path: '',\n        redirectTo: '',\n        pathMatch: 'full'\n    },\n    {\n        path: 'quote',\n        component: QuoteComponent\n    },\n    {\n        path: 'company',\n        component: CompanyComponent\n    },\n    {\n        path: 'newquote',\n        component: QuoteDetailComponent \n    }\n\n\n]\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.routes.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Headers } from '@angular/http';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class CompanyService {\r\n\r\nbasePath: string = \"http://localhost:3000/api/\";\r\n\r\n    constructor(private http: Http){\r\n        console.log('Company Service Initialized...');\r\n    }\r\n\r\n    getCompanies(){\r\n    return this.http.get(this.basePath + \"company\")\r\n        .map(res => res.json());\r\n}\r\n\r\n    addCompany(newCompany){   \r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.basePath + 'company', JSON.stringify(newCompany), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n\r\n    deleteCompany(id){\r\n        return this.http.delete(this.basePath + \"company/\"+id)\r\n        .map(res => res.json());\r\n    }\r\n\r\n    updateCompany(company){\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(this.basePath + 'company/'+company._id, JSON.stringify(company), {headers: headers})\r\n            .map(res => res.json());\r\n    }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/company.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","module.exports = \".toolbar-filler {\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1 1 auto;\\n            flex: 1 1 auto;\\n  }\\n\\n.md-menu-content {\\n    background: rosybrown !important;\\n    padding: 0;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 953\n// module chunks = 0","module.exports = \"\\n.botBorder {\\n  border-bottom: 1px solid grey;\\n}\\n\\n.toolbarStyles {\\n  background-color: cadetblue;\\n  color:white; \\n  width: 100%;\\n  border-radius: 3px 3px 0 0;\\n  padding-top: 15px;\\n  text-align: center;\\n}\\n\\nmd-input-container {\\n  width: 100%\\n}\\n\\n[hidden] {\\n  display: none !important;\\n}\\n\\nmd-hint{\\n  color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/company.component.css\n// module id = 954\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/quote-detail.component.css\n// module id = 955\n// module chunks = 0","module.exports = \"md-card-content{\\n    padding: 20px;\\n    border: solid 1px dimgray;\\n}\\n\\nmd-toolbar{\\n    height: 70px;\\n    border: solid 1px dimgray;\\n\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/quote.component.css\n// module id = 956\n// module chunks = 0","module.exports = \"\\n<md-toolbar color=\\\"primary\\\">\\n    <a md-icon-button [mdMenuTriggerFor]=\\\"menu\\\">\\n        <md-icon>menu</md-icon>\\n    </a>\\n\\n    <span >My Company</span>\\n    <span class=\\\"toolbar-filler\\\"></span>\\n\\n</md-toolbar>\\n<md-menu #menu=\\\"mdMenu\\\">\\n  <button md-menu-item routerLink=\\\"/quote\\\">\\n    <md-icon> dialpad </md-icon>\\n    <span> Enter a Quote </span>\\n  </button>\\n  <button md-menu-item routerLink=\\\"/company\\\">\\n    <md-icon> voicemail </md-icon>\\n    <span> Companies </span>\\n  </button>\\n  <button md-menu-item>\\n    <md-icon> notifications_off </md-icon>\\n    <span> Quote </span>\\n  </button>\\n</md-menu>\\n\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 957\n// module chunks = 0","module.exports = \"\\n<md-card style=\\\"padding:0\\\">\\n    \\n    <md-card-content style=\\\"padding:20px\\\">\\n\\n      <form #form=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onSubmit(form)\\\"> \\n        <div class=\\\"form-group\\\" > \\n        <md-input-container >\\n            <input #cname=\\\"ngModel\\\" md-input [(ngModel)]=\\\"cName\\\" pattern=\\\"...+\\\" ngControl=\\\"cName\\\" name=\\\"cName\\\" placeholder=\\\"Name\\\" required>\\n            <md-hint *ngIf=\\\"cname.invalid && cname.touched\\\" class=\\\"error\\\" >Company Name is required</md-hint>\\n        </md-input-container>\\n        </div>\\n        <md-input-container >\\n            <input md-input [(ngModel)]=\\\"cStreet\\\" name=\\\"cStreet\\\" placeholder=\\\"Street\\\">\\n        </md-input-container>\\n\\n        <md-input-container >\\n            <input md-input [(ngModel)]=\\\"cCity\\\" name=\\\"cCity\\\" placeholder=\\\"City\\\">\\n        </md-input-container>\\n        \\n        <md-select [(ngModel)]=\\\"cState\\\" name=\\\"cState\\\" #selectedState\\n            placeholder=\\\"State\\\" \\n            (blur)=\\\"validateState(selectedState.value)\\\"\\n            (change)=\\\"validateState(selectedState.value)\\\">\\n            <md-option  value=\\\"default\\\">Select a State...</md-option>\\n            <md-option *ngFor=\\\"let state of states\\\" [value]=\\\"state.value\\\">{{ state.viewValue }}</md-option>\\n        </md-select>\\n        <textarea md-input *ngIf=\\\"hasStateError\\\" class=\\\"error\\\" >Please select a valid state</textarea>\\n        \\n        <md-input-container >\\n            <input md-input [(ngModel)]=\\\"cZip\\\" name=\\\"cZip\\\" placeholder=\\\"Zip\\\">\\n        </md-input-container>\\n        \\n        <md-input-container >\\n            <input md-input [(ngModel)]=\\\"cPhone\\\" name=\\\"cPhone\\\"  placeholder=\\\"Phone\\\">\\n        </md-input-container>\\n        <md-input-container >\\n            <input md-input [(ngModel)]=\\\"cEmail\\\" name=\\\"cEmail\\\"  placeholder=\\\"Email\\\">\\n        </md-input-container>\\n        <button md-raised-button color=\\\"accent\\\" type=\\\"submit\\\" (click)=\\\"addCompany($event)\\\" \\n            [disabled]=\\\"form.invalid\\\">Add Company</button>\\n      </form>\\n    </md-card-content>\\n</md-card>\\n\\n<hr>\\n\\n<div style=\\\"width:100%\\\">\\n{{ form.value | json }}\\n{{ form.controls.cName?.errors | json }}\\n<h4>{{ cname.dirty }}</h4>\\n</div>\\n\\n<md-card style=\\\"width:50%;float:left;\\\" *ngFor=\\\"let company of companies\\\">\\n    <md-card-content style=\\\"height:150px;float:left\\\">\\n<button md-raised-button color=\\\"primary\\\" (click)=\\\"deleteCompany(company._id)\\\">Delete Company</button> <br><br>   \\n        {{company.CompanyName}}<br>\\n        {{company.CompanyStreet}}<br>\\n        {{company.CompanyCity}}, \\n        {{company.CompanyState}} \\n        {{company.CompanyZip}}<br>\\n        {{company.CompanyPhone}}<br>\\n        {{company.CompanyEmail}}<br><br>\\n    </md-card-content>\\n</md-card>\\n\\n<br><br>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/company.component.html\n// module id = 958\n// module chunks = 0","module.exports = \"<md-card class=\\\"page-card\\\">\\n        <md-toolbar color=\\\"accent\\\">\\n            <md-card-title>New Job Quote</md-card-title><br>\\n        </md-toolbar>\\n        <md-card-content>\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\" fxLayout.md=\\\"column\\\" fxLayout.lg=\\\"column\\\">\\n                <md-input-container>\\n                    <input #quoteName=\\\"ngModel\\\" md-input placeholder=\\\"Job name\\\" type=\\\"text\\\" [(ngModel)]=\\\"quoteName\\\" name=\\\"quoteName\\\" required>\\n                </md-input-container>\\n                <p class=\\\"text-danger\\\" *ngIf=\\\"quoteName.touched && quoteName.invalid\\\">You must include a job name.</p>\\n                <br>\\n                <md-select [(ngModel)]=\\\"companyName\\\" name=\\\"companyName\\\" placeholder=\\\"Company Name\\\">\\n                    <md-option *ngFor=\\\"let company of companies\\\" [value]=\\\"company.value\\\">{{ company.viewValue }}</md-option>\\n                </md-select>\\n                <br>\\n                <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\" fxLayout.md=\\\"column\\\" fxLayout.lg=\\\"column\\\" fxFlex=\\\"50\\\">\\n                 <div class=\\\"card-form-input\\\" fxflex>\\n                <md-input-container>\\n                    <input #amount=\\\"ngModel\\\" md-input placeholder=\\\"Amount quoted\\\" type=\\\"text\\\" [(ngModel)]=\\\"amountQuoted\\\" name=\\\"amountQuoted\\\" digits>\\n                </md-input-container>\\n                <p class=\\\"text-danger\\\" *ngIf=\\\"amount.errors?.digits\\\">Enter a dollar amount in numbers only.</p>\\n                 </div>\\n                </div>\\n                <br>\\n            </div>\\n        </md-card-content>\\n    </md-card>\\n    <md-card>\\n        <md-toolbar color=\\\"accent\\\">\\n            <md-card-title>Job Specifications</md-card-title><br>\\n        </md-toolbar>\\n        <md-card-content>\\n\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\" fxLayout.md=\\\"column\\\" fxLayout.lg=\\\"column\\\">\\n                <div class=\\\"card-form-input\\\" fxflex>\\n                    <section class=\\\"card-form-section\\\">\\n                        <md-radio-group [(ngModel)=\\\"jobType\\\" name=\\\"jobType\\\"]>\\n                            <md-radio-button *ngFor=\\\"let job of jobTypes\\\" [value]=\\\"job.value\\\">\\n                                {{job.viewValue}}\\n                            </md-radio-button>\\n                        </md-radio-group>\\n                    </section>\\n                </div>\\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\" fxLayout.md=\\\"column\\\" fxLayout.lg=\\\"column\\\" fxFlex=\\\"50\\\">\\n                <div class=\\\"card-form-input\\\" fxflex>\\n                    <md2-datepicker type=\\\"date\\\" placeholder=\\\"Job Date\\\" format=\\\"YYYY/MM/DD\\\" [(ngModel)]=\\\"jobDate\\\" name=\\\"jobDate\\\">\\n                    </md2-datepicker>\\n                </div>\\n            </div>\\n\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\" fxLayout.md=\\\"column\\\" fxLayout.lg=\\\"column\\\">\\n                \\n                <md-icon class=\\\"card-form-input-icon\\\" fxflex>label_outline</md-icon>\\n                <div class=\\\"card-form-input\\\" fxLayout=\\\"column\\\">\\n                    <md-textarea placeholder=\\\"Job Details\\\"></md-textarea>\\n                    <input md-input type=\\\"text\\\" [(ngModel)]=\\\"jobDetails\\\" name=\\\"jobDetails\\\" #details=\\\"ngModel\\\" digits>\\n                    <p class=\\\"text-danger\\\" *ngIf=\\\"details?.errors?.invalid\\\">Please include job details</p>\\n                </div>\\n\\n                <md-icon class=\\\"card-form-input-icon\\\" fxflex>home</md-icon>\\n                <div class=\\\"card-form-input\\\" fxflex=\\\"70\\\" fxLayout=\\\"column\\\">\\n                    <md-input-container>\\n                        <input md-input placeholder=\\\"Deliver report address\\\" type=\\\"text\\\" [(ngModel)]=\\\"deliveryAddress\\\" name=\\\"deliveryAddress\\\" #addr=\\\"ngModel\\\">\\n                    </md-input-container>\\n                    <!--<p class=\\\"text-danger\\\" *ngIf=\\\"addr?.errors?.invalid\\\">Please enter address where report will be delivered</p>-->\\n                </div>\\n\\n            </div>\\n            <br>\\n\\n            <br>\\n            <div fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\" fxLayout.md=\\\"column\\\" fxLayout.lg=\\\"column\\\">\\n                <div class=\\\"card-form-input\\\" fxflex=\\\"30\\\" fxLayout=\\\"column\\\">\\n                    <md-checkbox #accept>I certify that this information is correct</md-checkbox>\\n                </div>\\n            </div>\\n        </md-card-content>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/quote-detail.component.html\n// module id = 959\n// module chunks = 0","module.exports = \"<div class=\\\"page-content\\\">\\r\\n    <md-card class=\\\"page-card\\\">\\r\\n        <md-toolbar color=\\\"accent\\\">\\r\\n            <md-card-title style=\\\"margin-bottom: 0\\\">Quotes</md-card-title><br>\\r\\n        </md-toolbar>\\r\\n        <md-card-content>\\r\\n            <md-list >\\r\\n                <md-list-item *ngFor=\\\"let quote of quotes\\\">\\r\\n                    <md-icon md-list-avatar>note</md-icon>\\r\\n                    <h4 md-line><a>{{quote.QuoteName}}</a></h4>\\r\\n                    <p md-line>{{quote.CompanyName}}</p>\\r\\n                    <p md-line>{{quote.JobDate}}</p>\\r\\n                </md-list-item>\\r\\n            </md-list>\\r\\n        </md-card-content>\\r\\n    </md-card>\\r\\n</div>\\r\\n\\r\\n   \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    \\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/quote.component.html\n// module id = 960\n// module chunks = 0"],"sourceRoot":""}